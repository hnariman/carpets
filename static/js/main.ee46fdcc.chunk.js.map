{"version":3,"sources":["img/_ASA8309.jpg","img/_ASA8463.jpg","img/_ASA8365.jpg","components/Carousel.jsx","components/Header.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","DemoCarousel","className","src","require","Component","library","add","fab","fas","Header","state","icon","faHome","id","name","value","React","Footer","App","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oKAAAA,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,+HCOtBC,G,6KAEjB,OACE,yBAAKC,UAAU,oBACb,kBAAC,WAAD,KACE,yBAAKA,UAAU,iBACb,yBAAKC,IAAKC,EAAQ,MAClB,uBAAGF,UAAU,UAAb,aAEF,yBAAKA,UAAU,iBACb,yBAAKC,IAAKC,EAAQ,MAClB,uBAAGF,UAAU,UAAb,aAEF,yBAAKA,UAAU,iBACb,yBAAKC,IAAKC,EAAQ,MAClB,uBAAGF,UAAU,UAAb,mB,GAf8BG,c,6BCC1CC,IAAQC,IAAIC,IAAKC,K,IACIC,E,4MACnBC,MAAQ,G,uDAEN,OACE,yBAAKT,UAAU,UACb,yBAAKA,UAAU,eACb,kBAAC,IAAD,CAAiBU,KAAMC,OAEzB,yBAAKX,UAAU,kBACf,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAiBU,KAAM,CAAC,MAAO,gBAC/B,kBAAC,IAAD,CAAiBA,KAAM,CAAC,MAAO,aAC/B,kBAAC,IAAD,CAAiBA,KAAM,CAAC,MAAO,eAC/B,kBAAC,IAAD,CAAiBA,KAAM,CAAC,MAAO,aAC/B,6BACE,kBAAC,IAAD,CAAiBA,KAAM,CAAC,MAAO,cAC/B,4BAAQE,GAAG,GAAGC,KAAK,GAAGb,UAAU,aAC9B,4BAAQc,MAAM,IAAd,cACA,4BAAQA,MAAM,IAAd,WACA,4BAAQA,MAAM,IAAd,mB,GAnBsBC,IAAMZ,WCPrBa,E,4MACnBP,MAAQ,G,uDAEN,OAAO,2C,GAHyBM,IAAMZ,WCGrBc,E,4MACnBR,MAAQ,G,uDAEN,OACE,kBAAC,IAAMS,SAAP,KACE,kBAAC,EAAD,MACA,yBAAKlB,UAAU,UACb,6DACA,yCACA,oDACA,yDACA,mDACA,2FACA,4DACA,gDAEF,kBAAC,EAAD,MAKA,kBAAC,EAAD,W,GArByBe,IAAMZ,WCOnBgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ee46fdcc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/_ASA8309.ef50b637.jpg\";","module.exports = __webpack_public_path__ + \"static/media/_ASA8463.b41176d2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/_ASA8365.923b389b.jpg\";","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from \"react-responsive-carousel\";\n\nimport \"./style.css\";\n\nexport default class DemoCarousel extends Component {\n  render() {\n    return (\n      <div className=\"carousel-wrapper\">\n        <Carousel>\n          <div className=\"image-wrapper\">\n            <img src={require(\"../img/_ASA8309.jpg\")} />\n            <p className=\"legend\">Legend 1</p>\n          </div>\n          <div className=\"image-wrapper\">\n            <img src={require(\"../img/_ASA8463.jpg\")} />\n            <p className=\"legend\">Legend 2</p>\n          </div>\n          <div className=\"image-wrapper\">\n            <img src={require(\"../img/_ASA8365.jpg\")} />\n            <p className=\"legend\">Legend 3</p>\n          </div>\n        </Carousel>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nlibrary.add(fab, fas);\nexport default class Header extends React.Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"header\">\n        <div className=\"header-left\">\n          <FontAwesomeIcon icon={faHome} />\n        </div>\n        <div className=\"header-center\"></div>\n        <div className=\"header-right\">\n          <FontAwesomeIcon icon={[\"fab\", \"facebook-f\"]} />\n          <FontAwesomeIcon icon={[\"fab\", \"twitter\"]} />\n          <FontAwesomeIcon icon={[\"fab\", \"instagram\"]} />\n          <FontAwesomeIcon icon={[\"fab\", \"youtube\"]} />\n          <div>\n            <FontAwesomeIcon icon={[\"fas\", \"language\"]} />\n            <select id=\"\" name=\"\" className=\"languages\">\n              <option value=\"\">Azerbaijan</option>\n              <option value=\"\">Russian</option>\n              <option value=\"\">English</option>\n            </select>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class Footer extends React.Component {\n  state = {};\n  render() {\n    return <div>Footer</div>;\n  }\n}\n","import React from \"react\";\n\nimport Carousel from \"./components/Carousel\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nexport default class App extends React.Component {\n  state = {};\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <div className=\"navbar\">\n          <span> ANA SƏHİFƏ </span>\n          <span> MUZEY </span>\n          <span> TƏHSİL </span>\n          <span> EKSPOZİSİYA </span>\n          <span> KOLLEKSİYA </span>\n          <span> SƏRGİLƏR VƏ XƏBƏRLƏR </span>\n          <span> XİDMƏTLƏR </span>\n          <span> MAĞAZA </span>\n        </div>\n        <Carousel />\n        {/* <Gifts /> */}\n        {/* <CarpetsAroundTheWorld /> */}\n        {/* <Supporters /> */}\n        {/* <CompulsoryGovtSites /> */}\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}